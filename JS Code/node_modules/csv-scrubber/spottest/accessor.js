'use strict';

const assert = require('assert');

const nameIndex = {
  bill: 0,
  harry: 1
};

const rec = ['bill value', 'harry value'];

function addGetSet(rec, nameIndex) {
  for (let name in nameIndex) {
    Object.defineProperty(rec, name, {
      /* jshint loopfunc: true */
      get: () => {
        return rec[nameIndex[name]];
      },
      set: (value) => {
        rec[nameIndex[name]] = value;
      }
    });
  }
}

addGetSet(rec, nameIndex);

describe('accessor', function() {

  it('should return bill value', function() {
    assert(rec.bill = 'bill value');
  });
  it('should set bill value', function() {
    rec.bill = 'some other value';
    assert(rec.bill = 'some other value');
  });
  it('should return harry value', function() {
    assert(rec.harry = 'harry value');
  });
  it('should set harry value', function() {
    rec.harry = '123 u love me';
    assert(rec.harry = '123 u love me');
  });

  for (let n of rec) {
    console.log('n of', n);
  }
  for (let n in rec) {
    console.log('n in', n);
  }

});